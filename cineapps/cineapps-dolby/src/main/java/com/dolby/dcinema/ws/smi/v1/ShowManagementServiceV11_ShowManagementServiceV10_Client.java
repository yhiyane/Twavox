
package com.dolby.dcinema.ws.smi.v1;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * This class was generated by Apache CXF 3.1.1
 * 2015-07-09T17:41:03.880+02:00
 * Generated source version: 3.1.1
 * 
 */
public final class ShowManagementServiceV11_ShowManagementServiceV10_Client {

    private static final QName SERVICE_NAME = new QName("http://www.dolby.com/dcinema/ws/smi/v1", "ShowManagement_v1_1");

    private ShowManagementServiceV11_ShowManagementServiceV10_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = ShowManagementV11.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        ShowManagementV11 ss = new ShowManagementV11(wsdlURL, SERVICE_NAME);
        ShowManagementServiceV11 port = ss.getShowManagementServiceV10();  
        
        {
        System.out.println("Invoking deleteShowTimes...");
        com.dolby.dcinema.ws.smi.v1_0.DeleteShowTimesRequest _deleteShowTimes_parameters = null;
        try {
            com.dolby.dcinema.ws.smi.v1_0.DeleteShowTimesResponse _deleteShowTimes__return = port.deleteShowTimes(_deleteShowTimes_parameters);
            System.out.println("deleteShowTimes.result=" + _deleteShowTimes__return);

        } catch (Fault e) { 
            System.out.println("Expected exception: fault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getShowTimes...");
        com.dolby.dcinema.ws.smi.v1_0.GetShowTimesRequest _getShowTimes_parameters = null;
        try {
            com.dolby.dcinema.ws.smi.v1_0.GetShowTimesResponse _getShowTimes__return = port.getShowTimes(_getShowTimes_parameters);
            System.out.println("getShowTimes.result=" + _getShowTimes__return);

        } catch (Fault e) { 
            System.out.println("Expected exception: fault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getShowInfos...");
        com.dolby.dcinema.ws.smi.v1_0.GetShowInfosRequest _getShowInfos_parameters = null;
        try {
            com.dolby.dcinema.ws.smi.v1_0.GetShowInfosResponse _getShowInfos__return = port.getShowInfos(_getShowInfos_parameters);
            System.out.println("getShowInfos.result=" + _getShowInfos__return);

        } catch (Fault e) { 
            System.out.println("Expected exception: fault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getShowTimeInfos...");
        com.dolby.dcinema.ws.smi.v1_0.GetShowTimeInfosRequest _getShowTimeInfos_parameters = null;
        try {
            com.dolby.dcinema.ws.smi.v1_0.GetShowTimeInfosResponse _getShowTimeInfos__return = port.getShowTimeInfos(_getShowTimeInfos_parameters);
            System.out.println("getShowTimeInfos.result=" + _getShowTimeInfos__return);

        } catch (Fault e) { 
            System.out.println("Expected exception: fault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking createShowTimes...");
        com.dolby.dcinema.ws.smi.v1_0.CreateShowTimesRequest _createShowTimes_parameters = null;
        try {
            com.dolby.dcinema.ws.smi.v1_0.CreateShowTimesResponse _createShowTimes__return = port.createShowTimes(_createShowTimes_parameters);
            System.out.println("createShowTimes.result=" + _createShowTimes__return);

        } catch (Fault e) { 
            System.out.println("Expected exception: fault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getShows...");
        com.dolby.dcinema.ws.smi.v1_0.GetShowsRequest _getShows_parameters = null;
        try {
            com.dolby.dcinema.ws.smi.v1_0.GetShowsResponse _getShows__return = port.getShows(_getShows_parameters);
            System.out.println("getShows.result=" + _getShows__return);

        } catch (Fault e) { 
            System.out.println("Expected exception: fault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getSPL2...");
        com.dolby.dcinema.ws.smi.v1_1.GetSPL2Request _getSPL2_parameters = null;
        try {
            com.dolby.dcinema.ws.smi.v1_1.GetSPL2Response _getSPL2__return = port.getSPL2(_getSPL2_parameters);
            System.out.println("getSPL2.result=" + _getSPL2__return);

        } catch (Fault e) { 
            System.out.println("Expected exception: fault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking deleteShow...");
        com.dolby.dcinema.ws.smi.v1_0.DeleteShowRequest _deleteShow_parameters = null;
        try {
            com.dolby.dcinema.ws.smi.v1_0.DeleteShowResponse _deleteShow__return = port.deleteShow(_deleteShow_parameters);
            System.out.println("deleteShow.result=" + _deleteShow__return);

        } catch (Fault e) { 
            System.out.println("Expected exception: fault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking createShow...");
        com.dolby.dcinema.ws.smi.v1_0.CreateShowRequest _createShow_parameters = null;
        try {
            com.dolby.dcinema.ws.smi.v1_0.CreateShowResponse _createShow__return = port.createShow(_createShow_parameters);
            System.out.println("createShow.result=" + _createShow__return);

        } catch (Fault e) { 
            System.out.println("Expected exception: fault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getSPL...");
        com.dolby.dcinema.ws.smi.v1_0.GetSPLRequest _getSPL_parameters = null;
        try {
            com.dolby.dcinema.ws.smi.v1_0.GetSPLResponse _getSPL__return = port.getSPL(_getSPL_parameters);
            System.out.println("getSPL.result=" + _getSPL__return);

        } catch (Fault e) { 
            System.out.println("Expected exception: fault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getCueInfos...");
        com.dolby.dcinema.ws.smi.v1_0.GetCueInfosRequest _getCueInfos_parameters = null;
        try {
            com.dolby.dcinema.ws.smi.v1_0.GetCueInfosResponse _getCueInfos__return = port.getCueInfos(_getCueInfos_parameters);
            System.out.println("getCueInfos.result=" + _getCueInfos__return);

        } catch (Fault e) { 
            System.out.println("Expected exception: fault has occurred.");
            System.out.println(e.toString());
        }
            }

        System.exit(0);
    }

}
