package com.dolby.dcinema.ws.smi.v1;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * This class was generated by Apache CXF 3.1.1
 * 2015-07-09T17:38:11.686+02:00
 * Generated source version: 3.1.1
 * 
 */
@WebService(targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1", name = "PlaybackControlService_v1_1")
@XmlSeeAlso({com.dolby.dcinema.ws.smi.v1_4.ObjectFactory.class, com.dolby.dcinema.ws.smi.v1_3.ObjectFactory.class, com.dolby.dcinema.ws.smi.v1.schemas.common.ObjectFactory.class, com.dolby.dcinema.ws.smi.v1_2.ObjectFactory.class, com.dolby.dcinema.ws.smi.v1_1.ObjectFactory.class, com.dolby.dcinema.ws.smi.v1_0.ObjectFactory.class, com.dolby.dcinema.ws.smi.v1.schemas.fault.ObjectFactory.class, com.dolby.dcinema.ws.smi.v1.schemas.playbackcontrol.ObjectFactory.class})
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
public interface PlaybackControlServiceV11 {

    /**
     * setAutoPlaybackMode Operation
     *     Sets the auto playback mode (Manual, 3D, Dolby 3D) of the player.
     *     
     * 		  Parameters:
     * 		      autoPlaybackMode - The new auto playback mode of the player.
     * 
     * 		  Response:
     *     None
     * 
     * 		  Related Services:
     * 		      getAutoPlaybackMode - Used to obtain the current auto playback mode. 
     *       
     */
    @WebResult(name = "setAutoPlaybackModeResponse", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_1", partName = "result")
    @WebMethod(action = "http://www.dolby.com/dcinema/ws/smi/v1/setAutoPlaybackMode")
    public com.dolby.dcinema.ws.smi.v1_1.SetAutoPlaybackModeResponse setAutoPlaybackMode(
        @WebParam(partName = "parameters", name = "setAutoPlaybackModeRequest", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_1")
        com.dolby.dcinema.ws.smi.v1_1.SetAutoPlaybackModeRequest parameters
    ) throws Fault;

    /**
     * @see portType PlaybackControlService_v1_0
     *       
     */
    @WebResult(name = "playResponse", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0", partName = "result")
    @WebMethod(action = "http://www.dolby.com/dcinema/ws/smi/v1/play")
    public com.dolby.dcinema.ws.smi.v1_0.PlayResponse play(
        @WebParam(partName = "parameters", name = "playRequest", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0")
        com.dolby.dcinema.ws.smi.v1_0.PlayRequest parameters
    ) throws Fault;

    /**
     * fireCue Operation
     *     fires an advertised cue to the appropriate device.
     * 
     * 		  Parameters:
     *     cueId - The UUID of the cue to fire.
     *     parameterizedValue (optional) - The value to send to a parameterized cue.  Ignored for cues
     *         that are not parameterized.
     * 
     * 		  Response:
     * 		      None
     * 
     * 		  Exceptions:
     * 		      NotFound - If no cue with the matching uuid could be found.
     * 		      NotConnected - If the device for this cue is not connected.
     * 		      InvalidArgumentFailure - If no value is specified for a parameterized cue.
     * 
     * 		  Related Services:
     * 		      getCueInfos - This service can be used to determine what cues are available.
     *         
     */
    @WebResult(name = "fireCueResponse", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_1", partName = "result")
    @WebMethod(action = "http://www.dolby.com/dcinema/ws/smi/v1/fireCue")
    public com.dolby.dcinema.ws.smi.v1_1.FireCueResponse fireCue(
        @WebParam(partName = "parameters", name = "fireCueRequest", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_1")
        com.dolby.dcinema.ws.smi.v1_1.FireCueRequest parameters
    ) throws Fault;

    /**
     * @see portType PlaybackControlService_v1_0
     *       
     */
    @WebResult(name = "goToPositionResponse", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0", partName = "result")
    @WebMethod(action = "http://www.dolby.com/dcinema/ws/smi/v1/goToPosition")
    public com.dolby.dcinema.ws.smi.v1_0.GoToPositionResponse goToPosition(
        @WebParam(partName = "parameters", name = "goToPositionRequest", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0")
        com.dolby.dcinema.ws.smi.v1_0.GoToPositionRequest parameters
    ) throws Fault;

    /**
     * @see portType PlaybackControlService_v1_0
     *       
     */
    @WebResult(name = "getScheduleModeResponse", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0", partName = "result")
    @WebMethod(action = "http://www.dolby.com/dcinema/ws/smi/v1/getScheduleMode")
    public com.dolby.dcinema.ws.smi.v1_0.GetScheduleModeResponse getScheduleMode(
        @WebParam(partName = "parameters", name = "getScheduleModeRequest", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0")
        com.dolby.dcinema.ws.smi.v1_0.GetScheduleModeRequest parameters
    ) throws Fault;

    /**
     * getAutoPlaybackMode Operation
     *    Gets the current auto playback mode.
     * 
     * 		  Parameters:
     * 		      None
     * 
     * 		  Response:
     * 			  autoPlaybackMode - Indicates what playback mode the player will use for playing 3D content.
     * 			                     3D content may be played back in 2D mode if MANUAL is selected.
     * 
     * 		  Related Services:
     * 		      setAutoPlaybackMode - Used to set the current auto playback mode.
     *       
     */
    @WebResult(name = "getAutoPlaybackModeResponse", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_1", partName = "result")
    @WebMethod(action = "http://www.dolby.com/dcinema/ws/smi/v1/getAutoPlaybackMode")
    public com.dolby.dcinema.ws.smi.v1_1.GetAutoPlaybackModeResponse getAutoPlaybackMode(
        @WebParam(partName = "parameters", name = "getAutoPlaybackModeRequest", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_1")
        com.dolby.dcinema.ws.smi.v1_1.GetAutoPlaybackModeRequest parameters
    ) throws Fault;

    /**
     * @see portType PlaybackControlService_v1_0
     *       
     */
    @WebResult(name = "stopResponse", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0", partName = "result")
    @WebMethod(action = "http://www.dolby.com/dcinema/ws/smi/v1/stop")
    public com.dolby.dcinema.ws.smi.v1_0.StopResponse stop(
        @WebParam(partName = "parameters", name = "stopRequest", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0")
        com.dolby.dcinema.ws.smi.v1_0.StopRequest parameters
    ) throws Fault;

    /**
     * getPurgeSuiteState Operation
     * retrieves the state of PURGE_SUITE transport state
     * 
     * Parameters:
     * None
     * 
     * Response:
     * purgeSuiteState - the PURGE_SUITE state, which includes the progress information
     *   for secure logs extraction
     * 
     * Exceptions:
     * NotConnected - If the Decoder component is not connected
     * 
     * Related Services:
     * getPlaybackState - This service can be used to determine current playback and transport states
     *           
     */
    @WebResult(name = "getPurgeSuiteStateResponse", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_1", partName = "result")
    @WebMethod(action = "http://www.dolby.com/dcinema/ws/smi/v1/getPurgeSuiteState")
    public com.dolby.dcinema.ws.smi.v1_1.GetPurgeSuiteStateResponse getPurgeSuiteState(
        @WebParam(partName = "parameters", name = "getPurgeSuiteStateRequest", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_1")
        com.dolby.dcinema.ws.smi.v1_1.GetPurgeSuiteStateRequest parameters
    ) throws Fault;

    /**
     * @see portType PlaybackControlService_v1_0
     *       
     */
    @WebResult(name = "getPlaybackStateResponse", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0", partName = "result")
    @WebMethod(action = "http://www.dolby.com/dcinema/ws/smi/v1/getPlaybackState")
    public com.dolby.dcinema.ws.smi.v1_0.GetPlaybackStateResponse getPlaybackState(
        @WebParam(partName = "parameters", name = "getPlaybackStateRequest", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0")
        com.dolby.dcinema.ws.smi.v1_0.GetPlaybackStateRequest parameters
    ) throws Fault;

    /**
     * @see portType PlaybackControlService_v1_0
     *       
     */
    @WebResult(name = "setScheduleModeResponse", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0", partName = "result")
    @WebMethod(action = "http://www.dolby.com/dcinema/ws/smi/v1/setScheduleMode")
    public com.dolby.dcinema.ws.smi.v1_0.SetScheduleModeResponse setScheduleMode(
        @WebParam(partName = "parameters", name = "setScheduleModeRequest", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0")
        com.dolby.dcinema.ws.smi.v1_0.SetScheduleModeRequest parameters
    ) throws Fault;

    /**
     * @see portType PlaybackControlService_v1_0
     *       
     */
    @WebResult(name = "nextResponse", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0", partName = "result")
    @WebMethod(action = "http://www.dolby.com/dcinema/ws/smi/v1/next")
    public com.dolby.dcinema.ws.smi.v1_0.NextResponse next(
        @WebParam(partName = "parameters", name = "nextRequest", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0")
        com.dolby.dcinema.ws.smi.v1_0.NextRequest parameters
    ) throws Fault;

    /**
     * @see portType PlaybackControlService_v1_0
     *       
     */
    @WebResult(name = "setPlaybackModeResponse", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0", partName = "result")
    @WebMethod(action = "http://www.dolby.com/dcinema/ws/smi/v1/setPlaybackMode")
    public com.dolby.dcinema.ws.smi.v1_0.SetPlaybackModeResponse setPlaybackMode(
        @WebParam(partName = "parameters", name = "setPlaybackModeRequest", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0")
        com.dolby.dcinema.ws.smi.v1_0.SetPlaybackModeRequest parameters
    ) throws Fault;

    /**
     * @see portType PlaybackControlService_v1_0
     *       
     */
    @WebResult(name = "previousResponse", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0", partName = "result")
    @WebMethod(action = "http://www.dolby.com/dcinema/ws/smi/v1/previous")
    public com.dolby.dcinema.ws.smi.v1_0.PreviousResponse previous(
        @WebParam(partName = "parameters", name = "previousRequest", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0")
        com.dolby.dcinema.ws.smi.v1_0.PreviousRequest parameters
    ) throws Fault;

    /**
     * @see portType PlaybackControlService_v1_0
     *       
     */
    @WebResult(name = "selectContentResponse", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0", partName = "result")
    @WebMethod(action = "http://www.dolby.com/dcinema/ws/smi/v1/selectContent")
    public com.dolby.dcinema.ws.smi.v1_0.SelectContentResponse selectContent(
        @WebParam(partName = "parameters", name = "selectContentRequest", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0")
        com.dolby.dcinema.ws.smi.v1_0.SelectContentRequest parameters
    ) throws Fault;

    /**
     * @see portType PlaybackControlService_v1_0
     *       
     */
    @WebResult(name = "pauseResponse", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0", partName = "result")
    @WebMethod(action = "http://www.dolby.com/dcinema/ws/smi/v1/pause")
    public com.dolby.dcinema.ws.smi.v1_0.PauseResponse pause(
        @WebParam(partName = "parameters", name = "pauseRequest", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0")
        com.dolby.dcinema.ws.smi.v1_0.PauseRequest parameters
    ) throws Fault;
}
