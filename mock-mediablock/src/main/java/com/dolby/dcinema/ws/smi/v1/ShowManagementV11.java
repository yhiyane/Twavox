package com.dolby.dcinema.ws.smi.v1;

import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 3.1.1 2015-07-09T17:41:04.110+02:00
 * Generated source version: 3.1.1
 * 
 */
@WebServiceClient(name = "ShowManagement_v1_1", wsdlLocation = "dolby-smi/ShowManagement.wsdl", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1")
public class ShowManagementV11 extends Service {

	public final static URL WSDL_LOCATION;

	public final static QName SERVICE = new QName("http://www.dolby.com/dcinema/ws/smi/v1",
	        "ShowManagement_v1_1");
	public final static QName ShowManagementServiceV10 = new QName(
	        "http://www.dolby.com/dcinema/ws/smi/v1", "ShowManagementService_v1_0");
	static {
		URL url = ShowManagementV11.class.getResource("/dolby-smi/ShowManagement.wsdl");
		if (url == null) {
			url = ShowManagementV11.class.getClassLoader().getResource(
			        "/dolby-smi/ShowManagement.wsdl");
		}
		if (url == null) {
			java.util.logging.Logger.getLogger(ShowManagementV11.class.getName()).log(
			        java.util.logging.Level.INFO, "Can not initialize the default wsdl from {0}",
			        "/dolby-smi/ShowManagement.wsdl");
		}
		WSDL_LOCATION = url;
	}

	public ShowManagementV11(URL wsdlLocation) {
		super(wsdlLocation, SERVICE);
	}

	public ShowManagementV11(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public ShowManagementV11() {
		super(WSDL_LOCATION, SERVICE);
	}

	public ShowManagementV11(WebServiceFeature... features) {
		super(WSDL_LOCATION, SERVICE, features);
	}

	public ShowManagementV11(URL wsdlLocation, WebServiceFeature... features) {
		super(wsdlLocation, SERVICE, features);
	}

	public ShowManagementV11(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
		super(wsdlLocation, serviceName, features);
	}

	/**
	 *
	 * @return returns ShowManagementServiceV11
	 */
	@WebEndpoint(name = "ShowManagementService_v1_0")
	public ShowManagementServiceV11 getShowManagementServiceV10() {
		return super.getPort(ShowManagementServiceV10, ShowManagementServiceV11.class);
	}

	/**
	 * 
	 * @param features
	 *            A list of {@link javax.xml.ws.WebServiceFeature} to configure
	 *            on the proxy. Supported features not in the
	 *            <code>features</code> parameter will have their default
	 *            values.
	 * @return returns ShowManagementServiceV11
	 */
	@WebEndpoint(name = "ShowManagementService_v1_0")
	public ShowManagementServiceV11 getShowManagementServiceV10(WebServiceFeature... features) {
		return super.getPort(ShowManagementServiceV10, ShowManagementServiceV11.class, features);
	}

}
