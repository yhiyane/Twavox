package com.dolby.dcinema.ws.smi.v1;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * This class was generated by Apache CXF 3.1.1
 * 2015-07-09T17:41:04.083+02:00
 * Generated source version: 3.1.1
 * 
 */
@WebService(targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1", name = "ShowManagementService_v1_0")
@XmlSeeAlso({com.dolby.dcinema.ws.smi.v1.schemas.showmanagement.ObjectFactory.class, com.dolby.dcinema.ws.smi.v1.schemas.common.ObjectFactory.class, com.dolby.dcinema.ws.smi.v1_1.ObjectFactory.class, com.dolby.dcinema.ws.smi.v1_0.ObjectFactory.class, com.dolby.dcinema.ws.smi.v1.schemas.fault.ObjectFactory.class})
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
public interface ShowManagementServiceV10 {

    /**
     * deleteShow Operation
     *     Deletes one or more show times within the system.
     * 
     * 		  Parameters:
     * 		      showTimeId (many) - The unique identifiers of the show times to delete.
     * 
     * 		  Response:
     *     None
     * 
     * 		  Exceptions:
     * 		      None
     * 		      
     * 		  Related Services:
     * 		      getShowTimes/getShowTimeInfos - These services can be used to determine what show
     * 		          times exist before and after the deleteShowTimes request.
     *         
     */
    @WebResult(name = "deleteShowTimesResponse", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0", partName = "result")
    @WebMethod(action = "http://www.dolby.com/dcinema/ws/smi/v1/deleteShowTimes")
    public com.dolby.dcinema.ws.smi.v1_0.DeleteShowTimesResponse deleteShowTimes(
        @WebParam(partName = "parameters", name = "deleteShowTimesRequest", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0")
        com.dolby.dcinema.ws.smi.v1_0.DeleteShowTimesRequest parameters
    ) throws Fault;

    /**
     * getShowTimes Operation
     *     Lists the show times on the system.
     * 
     * 		  Parameters:
     * 		      auditoriumNumber (optional) - The auditorium to retrieve the show times from.  
     * 		          Only useful when calling this service on a TMS server.  If not specified then
     *         this will get the show times from the server location.  If "*" is specified,
     *         then this will get the show times regardless of location.
     * 		      startTime (optional) - Indicates that all show times whose end time is after this 
     * 		          time will be retrieved.  If not specified then all show times whose end time is 
     * 		          after now will be retrieved.
     * 		      endTime (optional) - Indicates that all show times whose start time is before this 
     * 		          time will be retrieved.  If not specified then all show times whose start time is 
     * 		          within two weeks of now will be retrieved. 
     * 
     * 		  Response:
     * 		      showId (many) - The list of show identifiers ordered by the show time auditorium and start time.
     * 
     * 		  Exceptions:
     * 		      InvalidAuditorium - If no auditorium with the specified number exists.
     * 		      
     * 		  Related Services:
     * 		      getShowTimeInfos - This service can be used to get brief information about the show 
     * 		          times that exist on the system.
     *         
     */
    @WebResult(name = "getShowTimesResponse", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0", partName = "result")
    @WebMethod(action = "http://www.dolby.com/dcinema/ws/smi/v1/getShowTimes")
    public com.dolby.dcinema.ws.smi.v1_0.GetShowTimesResponse getShowTimes(
        @WebParam(partName = "parameters", name = "getShowTimesRequest", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0")
        com.dolby.dcinema.ws.smi.v1_0.GetShowTimesRequest parameters
    ) throws Fault;

    /**
     * getShows Operation
     *     Lists the shows on the system.
     * 
     * 		  Parameters:
     * 		      None.
     * 
     * 		  Response:
     * 		      showId (many) - The list of show identifiers.
     * 
     * 		  Exceptions:
     * 		      None
     * 		      
     * 		  Related Services:
     * 		      getShowInfos - This service can be used to get brief information about the shows 
     * 		          that exist on the system.
     *         
     */
    @WebResult(name = "getShowsResponse", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0", partName = "result")
    @WebMethod(action = "http://www.dolby.com/dcinema/ws/smi/v1/getShows")
    public com.dolby.dcinema.ws.smi.v1_0.GetShowsResponse getShows(
        @WebParam(partName = "parameters", name = "getShowsRequest", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0")
        com.dolby.dcinema.ws.smi.v1_0.GetShowsRequest parameters
    ) throws Fault;

    /**
     * getShowInfos Operation
     *     Gets basic information about one or more shows that match all of the provided query 
     *     criteria.  If no show matches all of the provided query information then an empty 
     *     array will be returned.
     * 
     * 		  Parameters:
     * 		      showId (optional) - The unique identifier of the show whose information is to be retrieved.
     *         If not specified then show information for all known shows will be returned.
     *     auditoriumNumber (optional) - The auditorium in whose context the show properties are
     *         to be evaluated (i.e. license status, playability, transferring and other flags).
     * 		          Only useful when calling this service on a TMS server.  If not specified then this
     *      		      will get the show information from the server location.  If "*" is specified,
     *      	          then this will get the show information regardless of location.
     * 
     * 		  Response:
     * 		      showInfo (many) - the show information which matched all the specified query criteria.
     * 
     * 		  Exceptions:
     * 		      InvalidAuditorium - If no auditorium with the specified number exists.
     * 
     * Related Services:
     * 		      getShows - This service can be used to easily detect what shows exist within the system.
     *         
     */
    @WebResult(name = "getShowInfosResponse", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0", partName = "result")
    @WebMethod(action = "http://www.dolby.com/dcinema/ws/smi/v1/getShowInfos")
    public com.dolby.dcinema.ws.smi.v1_0.GetShowInfosResponse getShowInfos(
        @WebParam(partName = "parameters", name = "getShowInfosRequest", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0")
        com.dolby.dcinema.ws.smi.v1_0.GetShowInfosRequest parameters
    ) throws Fault;

    /**
     * getShowTimeInfos Operation
     *     Gets the information about one or more show times that match all of the provided query 
     *     criteria.  If no show time matches all of the provided query no show time information 
     *     will be returned.
     * 
     * 		  Parameters:
     * 		      showTimeId (optional) - The unique identifier of the show time whose information to 
     * 		          retrieved.  If not specified then show time information will be returned regardless 
     * 		          of their unique identifier.
     * 		      auditoriumNumber (optional) - The auditorium to retrieve the show time information from.  
     * 		          Only useful when calling this service on a TMS server.  If not specified then this
     *         will get the show time information from the server location.  If "*" is specified,
     *         then this will get the show time information regardless of location.
     * 		      startTime (optional) - Indicates that the information of all show times whose end time 
     * 		          is after this time will be retrieved. Should be at or before endTime if both are specified.
     *         If not specified then the information of all show times whose end time is after
     *         now will be retrieved.
     * 		      endTime (optional) - Indicates that the information of all show times whose start time 
     * 		          is before this time will be retrieved. Should be at or after startTime if both are
     *         specified. If not specified then the information of all
     * 		          show times whose start time is within two weeks of now will be retrieved. 
     * 
     * 		  Response:
     * 		      showInfo (many) - the show time information which matched all the specified query criteria
     *         ordered by the show time auditorium and start time.
     * 
     * Exceptions:
     * 		      InvalidAuditorium - If no auditorium with the specified number exists.
     * 		      
     * 		  Related Services:
     * 		      getShowTimes - This service can be used to easily detect what show times exist within the 
     * 		          system.
     *         
     */
    @WebResult(name = "getShowTimeInfosResponse", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0", partName = "result")
    @WebMethod(action = "http://www.dolby.com/dcinema/ws/smi/v1/getShowTimeInfos")
    public com.dolby.dcinema.ws.smi.v1_0.GetShowTimeInfosResponse getShowTimeInfos(
        @WebParam(partName = "parameters", name = "getShowTimeInfosRequest", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0")
        com.dolby.dcinema.ws.smi.v1_0.GetShowTimeInfosRequest parameters
    ) throws Fault;

    /**
     * createShowTimes Operation
     *     Creates one or more show times within the system.  Note that this may 
     *     create show times that are overlapping and thus may not get played automatically 
     *     off of the schedule.  If a show time with the same unique identifier 
     *     already exists within the system, then this show time will get replaced with the newly 
     *     specified show time.
     * 
     * Parameters:
     * 		      showTime (many) - One or more show times to create.
     * 
     * 		  Response:
     *     showTimeResponse (many) - The sequence of ShowTimeResponses  matching the number
     *     and order of the parameters:
     *       showTimeId - the unique identifier of the created show time or null if there was
     *           an error creating show time.
     *       fault - the fault that prevented show time creation or null if the show time was
     *           successfully created. Possible faults:
     *               NotFound - if the show this show time corresponds to cannot be found.
     *               InvalidAuditorium - If no auditorium with the specified number exists.
     * 
     * Exceptions:
     *       See Response.
     * 
     * Related Services:
     * 		      getShowTimes/getShowTimeInfos - These services can be used to determine what show
     * 		          times exist before and after the createShowTimes request.
     *         
     */
    @WebResult(name = "createShowTimesResponse", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0", partName = "result")
    @WebMethod(action = "http://www.dolby.com/dcinema/ws/smi/v1/createShowTimes")
    public com.dolby.dcinema.ws.smi.v1_0.CreateShowTimesResponse createShowTimes(
        @WebParam(partName = "parameters", name = "createShowTimesRequest", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0")
        com.dolby.dcinema.ws.smi.v1_0.CreateShowTimesRequest parameters
    ) throws Fault;

    /**
     * deleteShow Operation
     *     Deletes a show from all auditoriums of the system.  Does nothing if the 
     *     specified show does not exist.
     * 
     * 		  Parameters:
     * 		      showId - The unique identifier of the show to delete.
     * 
     * 		  Response:
     *     None
     * 
     * 		  Exceptions:
     * 		      None
     * 		      
     * 		  Related Services:
     * 		      getShows/getShowInfos - These services can be used to determine what shows exist 
     * 		          before and after the deleteShow request.
     *         
     */
    @WebResult(name = "deleteShowResponse", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0", partName = "result")
    @WebMethod(action = "http://www.dolby.com/dcinema/ws/smi/v1/deleteShow")
    public com.dolby.dcinema.ws.smi.v1_0.DeleteShowResponse deleteShow(
        @WebParam(partName = "parameters", name = "deleteShowRequest", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0")
        com.dolby.dcinema.ws.smi.v1_0.DeleteShowRequest parameters
    ) throws Fault;

    /**
     * createShow Operation
     *     Creates a new show within the system.  If a show with the same unique identifier 
     *     already exists within the system, then this show will get replaced with the newly 
     *     specified show.
     *     
     * 		  Parameters:
     * 		      show - The new show to be created which contains a well-formed Dolby XML show play list.
     * 
     * 		  Response:
     *     showId - The unique identifier of the created show.
     * 
     * 		  Exceptions:
     * 		      None
     * 		      
     * 		  Related Services:
     * 		      getClips - Service used to get known clips to put in the show.
     * 		      getCueInfos - Service used to get known cues to put in the show.
     * 		      getShows/getShowInfos - These services can be used to determine what shows exist 
     * 		          before and after the createShow request.
     *         
     */
    @WebResult(name = "createShowResponse", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0", partName = "result")
    @WebMethod(action = "http://www.dolby.com/dcinema/ws/smi/v1/createShow")
    public com.dolby.dcinema.ws.smi.v1_0.CreateShowResponse createShow(
        @WebParam(partName = "parameters", name = "createShowRequest", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0")
        com.dolby.dcinema.ws.smi.v1_0.CreateShowRequest parameters
    ) throws Fault;

    /**
     * getSPL Operation
     *     Gets the show play list (SPL) using the Dolby defined XML format.
     * 
     * 		  Parameters:
     * 		      showId - The unique identifier of the show whose show play list is being retrieved.
     * 
     * 		  Response:
     *     show - A string representing the XML show play list.
     * 
     * 		  Exceptions:
     * 		      NotFound - If no show with the matching uuid could be found.
     * 		      
     * 		  Related Services:
     * 		      getShows - This service can be used to easily detect what shows exist within the system.
     *         
     */
    @WebResult(name = "getSPLResponse", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0", partName = "result")
    @WebMethod(action = "http://www.dolby.com/dcinema/ws/smi/v1/getSPL")
    public com.dolby.dcinema.ws.smi.v1_0.GetSPLResponse getSPL(
        @WebParam(partName = "parameters", name = "getSPLRequest", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0")
        com.dolby.dcinema.ws.smi.v1_0.GetSPLRequest parameters
    ) throws Fault;

    /**
     * getCueInfos Operation
     *     Gets basic information about one or more cues that match all of the provided query 
     *     criteria.  If no cue matches all of the provided query information then an empty 
     *     array will be returned.
     *     
     * 		  Parameters:
     * 		      auditoriumNumber (optional) - The auditorium to retrieve the cue information from.  
     * 		          Only useful when calling this service on a TMS server. If not specified then this
     *         will get the cue information from the server location.  If "*" is specified, then
     *         this will get the cue information regardless of location.
     * 
     * 		  Response:
     * 		      cueInfo (many) - the cue information which matched all the specified query criteria
     * 
     * 		  Exceptions:
     * 		      InvalidAuditorium - If no auditorium with the specified number exists.
     * 		      
     * 		  Related Services:
     * 		      createShow - Service used to place known cues within a show.
     *         
     */
    @WebResult(name = "getCueInfosResponse", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0", partName = "result")
    @WebMethod(action = "http://www.dolby.com/dcinema/ws/smi/v1/getCueInfos")
    public com.dolby.dcinema.ws.smi.v1_0.GetCueInfosResponse getCueInfos(
        @WebParam(partName = "parameters", name = "getCueInfosRequest", targetNamespace = "http://www.dolby.com/dcinema/ws/smi/v1_0")
        com.dolby.dcinema.ws.smi.v1_0.GetCueInfosRequest parameters
    ) throws Fault;
}
