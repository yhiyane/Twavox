
package com.dolby.dcinema.ws.smi.v1;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * This class was generated by Apache CXF 3.1.1
 * 2015-07-09T17:38:10.672+02:00
 * Generated source version: 3.1.1
 * 
 */
public final class PlaybackControlServiceV10_PlaybackControlServiceV10_Client {

    private static final QName SERVICE_NAME = new QName("http://www.dolby.com/dcinema/ws/smi/v1", "PlaybackControl_v1_0");

    private PlaybackControlServiceV10_PlaybackControlServiceV10_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = PlaybackControlV10.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        PlaybackControlV10 ss = new PlaybackControlV10(wsdlURL, SERVICE_NAME);
        PlaybackControlServiceV10 port = ss.getPlaybackControlServiceV10();  
        
        {
        System.out.println("Invoking play...");
        com.dolby.dcinema.ws.smi.v1_0.PlayRequest _play_parameters = null;
        try {
            com.dolby.dcinema.ws.smi.v1_0.PlayResponse _play__return = port.play(_play_parameters);
            System.out.println("play.result=" + _play__return);

        } catch (Fault e) { 
            System.out.println("Expected exception: fault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking goToPosition...");
        com.dolby.dcinema.ws.smi.v1_0.GoToPositionRequest _goToPosition_parameters = null;
        try {
            com.dolby.dcinema.ws.smi.v1_0.GoToPositionResponse _goToPosition__return = port.goToPosition(_goToPosition_parameters);
            System.out.println("goToPosition.result=" + _goToPosition__return);

        } catch (Fault e) { 
            System.out.println("Expected exception: fault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getScheduleMode...");
        com.dolby.dcinema.ws.smi.v1_0.GetScheduleModeRequest _getScheduleMode_parameters = null;
        try {
            com.dolby.dcinema.ws.smi.v1_0.GetScheduleModeResponse _getScheduleMode__return = port.getScheduleMode(_getScheduleMode_parameters);
            System.out.println("getScheduleMode.result=" + _getScheduleMode__return);

        } catch (Fault e) { 
            System.out.println("Expected exception: fault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking stop...");
        com.dolby.dcinema.ws.smi.v1_0.StopRequest _stop_parameters = null;
        try {
            com.dolby.dcinema.ws.smi.v1_0.StopResponse _stop__return = port.stop(_stop_parameters);
            System.out.println("stop.result=" + _stop__return);

        } catch (Fault e) { 
            System.out.println("Expected exception: fault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getPlaybackState...");
        com.dolby.dcinema.ws.smi.v1_0.GetPlaybackStateRequest _getPlaybackState_parameters = null;
        try {
            com.dolby.dcinema.ws.smi.v1_0.GetPlaybackStateResponse _getPlaybackState__return = port.getPlaybackState(_getPlaybackState_parameters);
            System.out.println("getPlaybackState.result=" + _getPlaybackState__return);

        } catch (Fault e) { 
            System.out.println("Expected exception: fault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking setScheduleMode...");
        com.dolby.dcinema.ws.smi.v1_0.SetScheduleModeRequest _setScheduleMode_parameters = null;
        try {
            com.dolby.dcinema.ws.smi.v1_0.SetScheduleModeResponse _setScheduleMode__return = port.setScheduleMode(_setScheduleMode_parameters);
            System.out.println("setScheduleMode.result=" + _setScheduleMode__return);

        } catch (Fault e) { 
            System.out.println("Expected exception: fault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking next...");
        com.dolby.dcinema.ws.smi.v1_0.NextRequest _next_parameters = null;
        try {
            com.dolby.dcinema.ws.smi.v1_0.NextResponse _next__return = port.next(_next_parameters);
            System.out.println("next.result=" + _next__return);

        } catch (Fault e) { 
            System.out.println("Expected exception: fault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking setPlaybackMode...");
        com.dolby.dcinema.ws.smi.v1_0.SetPlaybackModeRequest _setPlaybackMode_parameters = null;
        try {
            com.dolby.dcinema.ws.smi.v1_0.SetPlaybackModeResponse _setPlaybackMode__return = port.setPlaybackMode(_setPlaybackMode_parameters);
            System.out.println("setPlaybackMode.result=" + _setPlaybackMode__return);

        } catch (Fault e) { 
            System.out.println("Expected exception: fault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking previous...");
        com.dolby.dcinema.ws.smi.v1_0.PreviousRequest _previous_parameters = null;
        try {
            com.dolby.dcinema.ws.smi.v1_0.PreviousResponse _previous__return = port.previous(_previous_parameters);
            System.out.println("previous.result=" + _previous__return);

        } catch (Fault e) { 
            System.out.println("Expected exception: fault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking selectContent...");
        com.dolby.dcinema.ws.smi.v1_0.SelectContentRequest _selectContent_parameters = null;
        try {
            com.dolby.dcinema.ws.smi.v1_0.SelectContentResponse _selectContent__return = port.selectContent(_selectContent_parameters);
            System.out.println("selectContent.result=" + _selectContent__return);

        } catch (Fault e) { 
            System.out.println("Expected exception: fault has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking pause...");
        com.dolby.dcinema.ws.smi.v1_0.PauseRequest _pause_parameters = null;
        try {
            com.dolby.dcinema.ws.smi.v1_0.PauseResponse _pause__return = port.pause(_pause_parameters);
            System.out.println("pause.result=" + _pause__return);

        } catch (Fault e) { 
            System.out.println("Expected exception: fault has occurred.");
            System.out.println(e.toString());
        }
            }

        System.exit(0);
    }

}
